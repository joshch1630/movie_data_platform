version: 2.1

jobs:
  run-unit-test:
    working_directory: /tmp/project
    docker:
      - image: devopssuimin/openjdk-python:8-3.7.4
        environment:
            PYTHONPATH: /tmp/project
    steps:
      - checkout
      - run:
          name: Run unit test
          command: |
            pip install --upgrade pip
            pip install -r test-requirements.txt
            pytest test

  web-test-and-build:
    working_directory: /tmp/project
    docker:
      - image: circleci/node:14.18.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-npm-dependencies-{{ checksum "src/web/package.json" }}
      - run:
          name: web build
          command: |
            cd ./src/web
            npm install
            npm test
            npm run build
      - save_cache:
          paths:
            - ./src/web/node_modules
            - ~/.npm 
            - ~/.cache
          key: v2-npm-dependencies-{{ checksum "src/web/package.json" }}
      - persist_to_workspace:
          root: /tmp/project
          paths:
            - .

  plan-apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: /tmp/project
      - run:
          name: terraform init & plan
          command: |
            cd /tmp/project
            terraform init -input=false
            terraform plan -out tfapply -var-file _variables.tfvars
      - persist_to_workspace:
          root: /tmp/project
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            terraform apply -auto-approve tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform create destroy plan
          command: |
            terraform plan -destroy -out tfdestroy -var-file _variables.tfvars
      - persist_to_workspace:
          root: .
          paths:
            - .

  destroy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform destroy
          command: |
            terraform apply -auto-approve tfdestroy

workflows:
  version: 2
  test_plan_approve_apply:
    jobs:
      - run-unit-test
      - web-test-and-build:
          requires:
              - run-unit-test
      - plan-apply:
          requires:
              - web-test-and-build
      # - hold-apply:
      #     type: approval
      #     requires:
      #       - plan-apply
      # - apply:
      #     requires:
      #       - hold-apply
      - apply:
          requires:
            - plan-apply
      # - plan-destroy:
      #     requires:
      #       - apply
      # - hold-destroy:
      #     type: approval
      #     requires:
      #       - plan-destroy
      # - destroy:
      #     requires:
      #       - hold-destroy
